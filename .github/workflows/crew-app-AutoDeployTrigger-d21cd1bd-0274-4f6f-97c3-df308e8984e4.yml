name: Trigger auto deployment for crew-app

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: 
      [ main ]
    paths:
    - '**'
    - '.github/workflows/crew-app-AutoDeployTrigger-d21cd1bd-0274-4f6f-97c3-df308e8984e4.yml'

  # Allow manual trigger 
  workflow_dispatch:      

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions: 
      id-token: write #This is required for requesting the OIDC JWT Token
      contents: read #Required when GH token is used to authenticate with private repo

    steps:
      - name: Checkout to the branch
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.CREWAPP_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CREWAPP_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CREWAPP_AZURE_SUBSCRIPTION_ID }}

  - name: Build and Push Docker Image
    run: |
      az acr login --name ${{ env.REGISTRY_NAME }}
      docker build -t ${{ env.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -f ${{ env.DOCKERFILE_PATH }} .
      docker push ${{ env.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  - name: Deploy to Azure Web App
    run: |
      az webapp create \
        --resource-group ${{ env.RESOURCE_GROUP }} \
        --plan ${{ env.PLAN_NAME }} \
        --name ${{ env.APP_NAME }} \
        --deployment-container-image-name ${{ env.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
        --registry-server ${{ env.REGISTRY_SERVER }}

  - name: Configure Azure Web App Settings
    run: |
      az webapp config container set \
        --resource-group ${{ env.RESOURCE_GROUP }} \
        --name ${{ env.APP_NAME }} \
        --docker-custom-image-name ${{ env.REGISTRY_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
        --docker-registry-server-url https://${{ env.REGISTRY_SERVER }} \
        --docker-registry-server-user ${{ secrets.ACR_USERNAME }} \
        --docker-registry-server-password ${{ secrets.ACR_PASSWORD }}


